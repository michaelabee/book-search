{"version":3,"sources":["components/navbar/navbar.js","components/banner/Banner.js","components/search/search.js","components/card/card.js","api/api.js","components/resultsContainer/results.js","utils/API.js","components/savedContainer/saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","id","react_router_dom","to","Banner","Search","state","searchTerm","handleInputChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","handleFormSubmit","preventDefault","props","searchBooks","type","this","onChange","placeholder","onClick","React","Component","Card","console","log","image","author","src","alt","description","button","axios","require","api","arg","get","Results","books","API","then","results","data","items","catch","error","handleBookSave","book","find","saveBook","googleId","title","volumeInfo","authors","imageLinks","thumbnail","displayBooks","undefined","map","card_card","_this2","key","search_search","getBooks","getBook","deleteBook","delete","bookData","post","Saved","loadBooks","res","err","handleBookDelete","getSavedBooks","Button","_id","App","navbar_navbar","banner_Banner","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.759d3963.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\"\nimport \"./navbar.css\";\n\nfunction Navbar (){\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li id=\"title\">\n          <p>Google Book Search</p>\n        </li>\n        <li className=\"item\">\n          <Link to={\"/search\"}>Search</Link>\n        </li>\n        <li>\n        <Link to={\"\"}>Saved Books</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  return (\n    <div id=\"jumbo\">\n      <h1 id=\"description\">\n        React Book Search\n      </h1>\n      <h2>\n        Search for books and create your own personalized book list.\n      </h2>\n    </div>\n  );\n}\n\nexport default Banner;\n","import React from \"react\";\r\nimport \"./search.css\";\r\n\r\nclass Search extends React.Component{\r\n  state = {\r\n    searchTerm: \"\"\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.searchBooks(this.state.searchTerm);\r\n    this.setState({\r\n      searchTerm: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-container\">\r\n        <h1>Book Search</h1>\r\n        <form className=\"form\">\r\n        <input \r\n          name=\"searchTerm\"\r\n          type=\"text\"\r\n          value={this.state.searchTerm}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Enter a Book Title\"\r\n          ></input>\r\n          <button onClick={this.handleFormSubmit}>Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport \"./card.css\";\n\nfunction Card(props) {\n  console.log(props.image, \"propsimage\");\n  return (\n    <div className=\"card\">\n      <div>\n        <h1>{props.name}</h1>\n        <h3>{props.author}</h3>\n        <img src={props.image} alt={props.name}></img>\n        <p>{props.description}</p>\n        <button>{props.button}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","const axios = require(\"axios\");\r\nvar API_KEY = \"AIzaSyAdCuZIysFDvikGCFn_KRWSGuqmTfvIOu4\";\r\n\r\nexport default {\r\n    searchBooks: function(arg) {\r\n      return axios.get(\"https://www.googleapis.com/v1/volumes?q=\" + arg + \"&key=\" + API_KEY);\r\n    },\r\n  };\r\n","import React, {Component} from \"react\";\r\nimport Search from \"../search/search\";\r\nimport Card from \"../card/card\";\r\nimport API from \"../../api/api\";\r\nimport \"./results.css\";\r\n\r\nclass Results extends Component {\r\n\r\n  state ={\r\n    books:[]\r\n  }\r\n\r\n  searchBooks = (arg) => {\r\n    console.log(\"searchBooks hit\", arg);\r\n    API.searchBooks(arg)\r\n    .then (results => {\r\n      console.log(results.data.items, \"results.data\");\r\n      this.setState({ books: results.data.items });\r\n    })\r\n    .catch (error => \r\n      console.log(error)\r\n    )\r\n  };\r\n  handleBookSave = id => {\r\n    const book = this.state.books.find(book => book.id === id);\r\n\r\n    API.saveBook({\r\n      googleId: book.id,\r\n      title: book.volumeInfo.title,\r\n      author: book.volumeInfo.authors,\r\n      description: book.volumeInfo.description,\r\n      image: book.volumeInfo.imageLinks.thumbnail\r\n    }).then(() => this.searchBooks());\r\n  };\r\n\r\n  displayBooks = () => {\r\n    if(this.state.books === undefined){\r\n      return null;\r\n    }\r\n    return this.state.books.map(book => (\r\n      <Card>\r\n      key={book.volumeInfo.id}\r\n      name={book.volumeInfo.title}\r\n      author={book.volumeInfo.author}\r\n      description={book.volumeInfo.description}\r\n      image={book.volumeInfo.imageLinks.thumbnail}\r\n      </Card>\r\n    ))\r\n  }\r\n  render(){\r\n    const books = this.state.books.map(book => {\r\n      return(\r\n      <Card\r\n      key={book.id}\r\n      name={book.volumeInfo.title}\r\n      author={book.volumeInfo.author}\r\n      description={book.volumeInfo.description}\r\n      image={book.volumeInfo.imageLinks.thumbnail}\r\n      button={() => (\r\n        <button\r\n          onClick={() => this.handleBookSave(book.id)}\r\n          className=\"btn btn-primary ml-2\"\r\n        >\r\n          Save\r\n        </button>\r\n      )}\r\n      />\r\n    )});\r\n  return (\r\n    \r\n    <div id=\"results-container\">\r\n      <Search searchBooks={this.searchBooks}/>\r\n      <h1>Search Results</h1>\r\n      {books}\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nexport default Results;","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  getBooks: function() {\r\n    return axios.get(\"/api\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function(id) {\r\n    return axios.get(\"/api/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function(id) {\r\n    return axios.delete(\"/api/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function(bookData) {\r\n    return axios.post(\"/api\", bookData);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Card from \"../card/card\";\r\nimport API from \"../../utils/API\";\r\nimport \"./saved.css\";\r\n\r\nclass Saved extends React.Component {\r\n\r\n  state = {\r\n    books: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadBooks();\r\n  }\r\n\r\n  loadBooks = () => {\r\n    API.getBooks()\r\n      .then(res => this.setState({ books: res.data }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleBookDelete = id => {\r\n    API.deleteBook(id).then(res => this.getSavedBooks());\r\n  };\r\n\r\n  displayBooks = () => {\r\n    if (this.state.books === undefined) {\r\n      return null;\r\n    }\r\n    return this.state.books.map(book => (\r\n      <Card\r\n        key={book.volumeInfo.id}\r\n        name={book.volumeInfo.title}\r\n        author={book.volumeInfo.author}\r\n        description={book.volumeInfo.description}\r\n        image={book.volumeInfo.imageLinks.thumbnail}\r\n        Button={() => (\r\n          <button\r\n            onClick={() => this.handleBookDelete(book._id)}>\r\n            Delete</button>\r\n        )}\r\n      />\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    const books = this.state.books.map(book => {\r\n      return(\r\n      <Card\r\n      key={book.id}\r\n      name={book.volumeInfo.title}\r\n      author={book.volumeInfo.author}\r\n      description={book.volumeInfo.description}\r\n      image={book.volumeInfo.imageLinks.thumbnail}\r\n      Button={() => (\r\n        <button\r\n          onClick={() => this.handleBookDelete(book.id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      )}\r\n      />\r\n    )});\r\n    return (\r\n      <div id=\"saved-container\">\r\n        <h1>Saved Books</h1>\r\n        {books}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;","import React, { Component } from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\n\nimport Navbar from \"./components/navbar/navbar\";\nimport Banner from \"./components/banner/Banner\";\n\nimport Results from \"./components/resultsContainer/results\";\nimport Saved from \"./components/savedContainer/saved\"\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Router>\n            <Navbar />\n            <Banner/>\n            <Switch>\n              <Route exact path=\"\" component={Saved} />\n              <Route exact path=\"/search\" component={Results} />\n              {/* <Route component={NoMatch} /> */}\n            </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}